apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
spec:
  replicas: 1 # Scale to 3 replicas
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-app
        image: app:latest # Replace with your image name
        imagePullPolicy: Never
        ports:
          - containerPort: 3000
        env:
          - name: DATABASE_URL
            value: postgres://postgres:password@postgres:5432/mydb
          - name: REDIS_URL
            value: redis://redis:6379
          - name: MONGO_URL
            value: mongodb://root:password@mongo:27017/mydb?authSource=admin
          - name: KAFKA_BROKER
            value: kafka:9092
        livenessProbe:
          httpGet:
            path: /liveness
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readiness
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 30
        startupProbe:
          httpGet:
            path: /startup
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
spec:
  selector:
    app: my-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer  # Use NodePort if running locally
